cat<<'EOT'>> align_sam.sh
#!/bin/bash
#SBATCH -n 4
#SBATCH --mem-per-cpu=9G

/scratch/groups/sgdp_nanopore/software/minimap2/minimap2 \
-a \
--MD \
-x map-ont \
/scratch/groups/sgdp_nanopore/Resources/human_g1k_v37.fasta \
/scratch/groups/sgdp_nanopore/21_03_22/analysis/error_correction/medaka_output/consensus.fasta
> aln.sam

EOT

cat<<'EOT'>> get_packages.sh
#!/bin/bash
#SBATCH -n 4
#SBATCH --mem-per-cpu=9G

conda install -c bioconda pybedtools
conda install -c bioconda samtools
python3 -m pip install pysam==0.15.4

cd /scratch/groups/sgdp_nanopore/software/talon/TALON-master

pip install .

EOT

cat<<'EOT'>> align_sam_rnaseq.sh
#!/bin/bash
#SBATCH -n 4
#SBATCH --mem-per-cpu=9G

/scratch/groups/sgdp_nanopore/software/minimap2/minimap2 \
-t 8 -ax splice \
--MD \
/scratch/groups/sgdp_nanopore/Resources/hg38.fa \
/scratch/groups/sgdp_nanopore/RNAseq_training_02_02_2022/barcode1.fastq.gz \
> all_reads.sam

python /scratch/groups/sgdp_nanopore/software/transcriptclean/TranscriptClean-master/TranscriptClean.py \
--sam all_reads.sam \
--genome /scratch/groups/sgdp_nanopore/Resources/hg38.fa \
--outprefix ./outfile



module load apps/samtools

samtools view -q 40 -b -F 2304 all_reads.sam | samtools sort -@ 8 -o all_reads_filtered.bam

EOT

## align after doing a de-novo assembly
cat<<'EOT'>> align_sam.sh
#!/bin/bash
#SBATCH -n 4
#SBATCH --mem-per-cpu=9G

/scratch/groups/sgdp_nanopore/software/minimap2/minimap2 \
-a \
--MD \
-x asm10 \
/scratch/groups/sgdp_nanopore/Resources/human_g1k_v37.fasta \
/scratch/groups/sgdp_nanopore/20_01_22/analysis/assembly/miniasm.fasta \
> aln.sam

module load apps/samtools

samtools sort -@ 8 -o aln.bam aln.sam

samtools index -@ 8 aln.bam

cuteSV aln.bam /scratch/groups/sgdp_nanopore/Resources/human_g1k_v37.fasta call.vcf ./ \
    -s 1 --genotype --report_readid -p -1 -mi 500 -md 500 \
    --max_cluster_bias_INS 1000 \
    --diff_ratio_merging_INS 0.9 \
    --max_cluster_bias_DEL 1000 \
    --diff_ratio_merging_DEL 0.5
python /users/k1463257/mambaforge/pkgs/cutesv-1.0.13-pyhdfd78af_0/site-packages/cuteSV/diploid_calling.py call.vcf call_final.vcf

EOT
